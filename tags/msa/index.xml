<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>msa on Alli&#39;s blog</title>
    <link>https://Shin0102.github.io/tags/msa/</link>
    <description>Recent content in msa on Alli&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>shinalli0102@gmail.com (shin alli)</managingEditor>
    <webMaster>shinalli0102@gmail.com (shin alli)</webMaster>
    <copyright>©2024, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 01 May 2023 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://Shin0102.github.io/tags/msa/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>일체형 데이터베이스, 목적에 맞게 MSA 구조로 전환하기</title>
        <link>https://Shin0102.github.io/posts/aws-summit-2022-msa/</link>
        <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Mon, 01 May 2023 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/aws-summit-2022-msa/</guid>
        <description>들어가며 현재 회사에서 Monolothic Django로 서비스를 운영중이다. Django Admin, 비동기 처리를 위한 Worker 서버는 다른 Elastic Beanstalk 서버로 운영중이지만 같은 DB, 소스코드를 공유중인 상태로</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/aws-summit-2022/aws-summit-2022.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/aws-summit-2022/aws-summit-2022.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>aws summit</category>
            
          
            
              <category>msa</category>
            
          
            
              <category>database</category>
            
          
        
        
          
            
              <category>msa</category>
            
          
        
        
      </item>
      
      <item>
        <title>MSA 설계시 고려해야될 점과 Pattern</title>
        <link>https://Shin0102.github.io/posts/devops-msa-considerations/</link>
        <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 01 Jun 2021 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/devops-msa-considerations/</guid>
        <description>고려해야 될점 Service Discovery : Container가 Scailing 되어도 해당서비스를 찾을 수 있어야 함 API Gateway : 외부에서 내부의 서비스들에 접근에 대한 제어(인증, 로깅, 모니터링,</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/msa.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/msa.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>MSA</category>
            
          
        
        
          
            
              <category>devops</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
