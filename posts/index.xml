<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on Alli&#39;s blog</title>
    <link>https://Shin0102.github.io/posts/</link>
    <description>Recent content in Posts on Alli&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>shinalli0102@gmail.com (shin alli)</managingEditor>
    <webMaster>shinalli0102@gmail.com (shin alli)</webMaster>
    <copyright>©2025, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 27 May 2024 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://Shin0102.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>AWS DMS를 활용한 NoSQL 적용기</title>
        <link>https://Shin0102.github.io/posts/nosql-apply-using-aws-dms/</link>
        <pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Mon, 27 May 2024 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/nosql-apply-using-aws-dms/</guid>
        <description>최근 회사에서 대량의 데이터를 엑셀로 다운로드하는 기능의 성능개선 요청이슈가 있었다. 워낙 많은양의 데이터를 한번에 불러오는 작업이다보니 DB에 병목현상이 발</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/nosql-apply-using-aws-dms/aws-dms.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/nosql-apply-using-aws-dms/aws-dms.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>aws</category>
            
          
            
              <category>dms</category>
            
          
            
              <category>cdc</category>
            
          
            
              <category>nosql</category>
            
          
        
        
          
            
              <category>성능개선</category>
            
          
        
        
      </item>
      
      <item>
        <title>정산시스템 이벤트 기반 아키텍처(EDA)로 마이그레이션 하기</title>
        <link>https://Shin0102.github.io/posts/event-driven-architecture/</link>
        <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Sun, 03 Mar 2024 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/event-driven-architecture/</guid>
        <description>들어가며 작년 하반기에 입사당시부터 문제가 많았던 정산시스템을 마이그레이션 하였다. 회사 도메인 특성상 매달 사용자의 급여를 입금받아 정산하고 이를 다시 사용자</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/event-driven-architecture/paywatch.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/event-driven-architecture/paywatch.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>EDA</category>
            
          
            
              <category>Migration</category>
            
          
        
        
          
            
              <category>Migration</category>
            
          
        
        
      </item>
      
      <item>
        <title>AWS Elastic Beanstalk 환경 구성하기</title>
        <link>https://Shin0102.github.io/posts/aws-eb-nginx-config/</link>
        <pubDate>Thu, 06 Jul 2023 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Thu, 06 Jul 2023 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/aws-eb-nginx-config/</guid>
        <description>들어가며 Elastic Beanstalk(이하 EB)은 어플리케이션 배포/관리(프로비저닝, 로드 밸런싱, 스케일링, 모니터링등)를 손쉽게 할수 있도록 도와주는 AWS</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/aws-eb-nginx-config/elastic_beanstalk_logo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/aws-eb-nginx-config/elastic_beanstalk_logo.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>aws</category>
            
          
            
              <category>elastic beanstalk</category>
            
          
            
              <category>nginx</category>
            
          
            
              <category>infra</category>
            
          
        
        
          
            
              <category>infra</category>
            
          
        
        
      </item>
      
      <item>
        <title>일체형 데이터베이스, 목적에 맞게 MSA 구조로 전환하기</title>
        <link>https://Shin0102.github.io/posts/aws-summit-2022-msa/</link>
        <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Mon, 01 May 2023 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/aws-summit-2022-msa/</guid>
        <description>들어가며 현재 회사에서 Monolothic Django로 서비스를 운영중이다. Django Admin, 비동기 처리를 위한 Worker 서버는 다른 Elastic Beanstalk 서버로 운영중이지만 같은 DB, 소스코드를 공유중인 상태로</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/aws-summit-2022/aws-summit-2022.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/aws-summit-2022/aws-summit-2022.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>aws summit</category>
            
          
            
              <category>msa</category>
            
          
            
              <category>database</category>
            
          
        
        
          
            
              <category>msa</category>
            
          
        
        
      </item>
      
      <item>
        <title>2022 회고</title>
        <link>https://Shin0102.github.io/posts/retrospect-2022/</link>
        <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Wed, 01 Feb 2023 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/retrospect-2022/</guid>
        <description>들어가며 어느덧 2023년 1달이 지났다. 연초에 위염+장염이 심하게 걸리는 바람에 회고를 뒤늦게 쓰게 되었다. 개인적으로 2017년 부터 노션에 새해 목표를 정</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/retrospect-2022/2022.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/retrospect-2022/2022.jpg" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>2022 회고</category>
            
          
        
        
          
            
              <category>회고</category>
            
          
        
        
      </item>
      
      <item>
        <title>AWS Lambda with SAM</title>
        <link>https://Shin0102.github.io/posts/aws-lambda-with-sam/</link>
        <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Sat, 08 Oct 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/aws-lambda-with-sam/</guid>
        <description>들어가며 서비스 개발을 하다보면 Serverless로 빠르게 개발이 필요한 경우가 생긴다. AWS를 쓰고있다면 Lambda 를 활용하면 되는데, 간단한 경우에는 콘솔로</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/aws-lambda-with-sam/aws-lambda.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/aws-lambda-with-sam/aws-lambda.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>aws lambda</category>
            
          
            
              <category>aws sam</category>
            
          
            
              <category>lambda environments</category>
            
          
            
              <category>iac</category>
            
          
            
              <category>serverless</category>
            
          
        
        
          
            
              <category>infra</category>
            
          
        
        
      </item>
      
      <item>
        <title>django, 협업하기 좋은코드 만들기</title>
        <link>https://Shin0102.github.io/posts/django-clean-code/</link>
        <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Sun, 31 Jul 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/django-clean-code/</guid>
        <description>들어가며 django를 사용하게 되면 보통 django rest framework(이하 drf)를 같이 사용하여 rest api 서버를 구성하는 경우가 많다. 여러 프로젝트를 거치며 다</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/django-clean-code/django.svg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/django-clean-code/django.svg" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>django</category>
            
          
            
              <category>clean code</category>
            
          
            
              <category>style guide</category>
            
          
            
              <category>custom exception hanlder</category>
            
          
        
        
          
            
              <category>clean code</category>
            
          
        
        
      </item>
      
      <item>
        <title>어떤 문제들을 AI와 딥러닝으로 해결할 수 있을까요?</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-8/</link>
        <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 28 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-8/</guid>
        <description>들어가며 마지막 8주차 강의이다. 이번 강의에서는 다양한 딥러닝 모델과 그것들을 어디에 활용하는지에 대해 배웠다. 각 모델들의 자세한 설명보다는 간단간단한 컨셉</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Transfer Learning</category>
            
          
            
              <category>Ensemble Learning</category>
            
          
            
              <category>Self-supervised Learning</category>
            
          
            
              <category>Grad-CAM</category>
            
          
            
              <category>GAN</category>
            
          
            
              <category>RNN</category>
            
          
            
              <category>Attention Model</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>CNN, Autoencoder, Upsampling, Semantic Segmentation</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-7/</link>
        <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 21 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-7/</guid>
        <description>들어가며 7주차 강의에 접어들었다. 이번 강의에서는 대표적인 CNN 모델들과 모델에 사용되는 대표적인 작동방식(Residual Block, Bottleneck Block, Autoencoder</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>CNN</category>
            
          
            
              <category>AlexNet</category>
            
          
            
              <category>VGGNet</category>
            
          
            
              <category>ResNet</category>
            
          
            
              <category>Autoencoder</category>
            
          
            
              <category>Upsampling</category>
            
          
            
              <category>Semantic Segmentation</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>Convolutional Neural network</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-6/</link>
        <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 14 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-6/</guid>
        <description>들어가며 6주차 강의에 접어들었다. 이번 강의는 컴퓨터 비전의 핵심적인 CNN에 대한 내용이다. 컴퓨터가 이미지를 어떻게 처리하고 어떻게 학습시키는지에 대해 배</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Convolutional Filter</category>
            
          
            
              <category>Convolutional Neural network</category>
            
          
            
              <category>Padding, Stride - Feature map의 크기</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>Backward Pass, Optimizer, Batch Normalization</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-5/</link>
        <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 07 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-5/</guid>
        <description>들어가며 5주차 강의에 접어들었다. 이번장에서는 MLP의 전반적인 과정에 대한 내용이었고, 그중에서 Forward Pass, Backward Pass에 대한 내용이 주요 내용이었다. 그리고 최</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Backward Pass</category>
            
          
            
              <category>Optimizer</category>
            
          
            
              <category>Batch Normalization</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>Multi-Layer Perceptron</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-4/</link>
        <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 31 May 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-4/</guid>
        <description>들어가며 4주차 강의에 접어들었다. 이제까지는 주로 Machine Learning 의 대한 내용들에 대해 다루었다. 강의의 진도가 매우 빠르다. TIL과 실습과제들을 해보면서 감을 잡고있</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Mult-Layer Perception</category>
            
          
            
              <category>Deep Learning</category>
            
          
            
              <category>Forward Pass</category>
            
          
            
              <category>Activation Function</category>
            
          
            
              <category>Loss Function</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>Unsupervised Learning - Dimensionallity Reduction, Clustering</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-3/</link>
        <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Wed, 25 May 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-3/</guid>
        <description>들어가며 3주차 강의에 접어들었다. 이번 강의는 Machine Learning중 output이 주어지지 않는 Unsupervised Learning에 대한 내용이다. 생소한 수식들과 처음</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Unsupervised Learning</category>
            
          
            
              <category>Dimensionallity Reduction</category>
            
          
            
              <category>Clustering</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>Supervised Learning - Linear Model, Decision Tree, Ensemble</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-2/</link>
        <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Wed, 18 May 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-2/</guid>
        <description>들어가며 2주차 강의에 접어들었다. 이번 강의는 Machine Learning중 output이 주어지는 Supervised Learning에 대해서, 그리고 기본이 되는 Linear Model</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Supervised Learning</category>
            
          
            
              <category>Linear Model</category>
            
          
            
              <category>Decision Tree</category>
            
          
            
              <category>Ensemble</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>AI, Machine Learning, Deep Learning?</title>
        <link>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-1/</link>
        <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 17 May 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/socar-ai-bootcamp-til-1/</guid>
        <description>들어가며 AI에 대해서 흥미는 있었지만, 막연하게 미디어에서만 접하다가 좀 더 깊이 있게 배워보고 싶다는 생각을 하던 중에 project lion이란 곳에서 AI 부트 캠프를 시작</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/socar-ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/socar-ai.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>TIL</category>
            
          
            
              <category>AI</category>
            
          
            
              <category>Machine Learning</category>
            
          
            
              <category>Deep Learning</category>
            
          
        
        
          
            
              <category>쏘카 X 멋쟁이사자처럼 AI 부트 캠프</category>
            
          
        
        
      </item>
      
      <item>
        <title>django 에서 celery 활용기</title>
        <link>https://Shin0102.github.io/posts/django-celery-usage/</link>
        <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 19 Apr 2022 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/django-celery-usage/</guid>
        <description>들어가며 django로 서버를 운영하다보면 비동기 처리가 필요한 경우가 많다. 예를 들어 외부 API 호출, 데이터베이스 조회, 복잡한 계산 등등 많은 경우에 비동기 처</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/django-celery-usage/python-celery.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/django-celery-usage/python-celery.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>django</category>
            
          
            
              <category>celery</category>
            
          
            
              <category>비동기</category>
            
          
            
              <category>async</category>
            
          
            
              <category>분산락</category>
            
          
            
              <category>distributed lock</category>
            
          
            
              <category>redis</category>
            
          
            
              <category>visibility timeout</category>
            
          
        
        
          
            
              <category>django</category>
            
          
        
        
      </item>
      
      <item>
        <title>1인 개발로 서비스 런칭하며...</title>
        <link>https://Shin0102.github.io/posts/indie-developer/</link>
        <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Mon, 13 Dec 2021 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/indie-developer/</guid>
        <description>들어가며 3년 넘게 다니던 회사를 그만두게 되고, 타이밍 좋게? 지인소개로 새로 런칭하는 서비스(재능기부 플랫폼)의 백엔드 개발에 참여하게 되었다. 레거시 없이</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/indie-developer.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/indie-developer.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>1인 개발</category>
            
          
            
              <category>AWS activate</category>
            
          
            
              <category>풀스택</category>
            
          
        
        
          
            
              <category>experience</category>
            
          
        
        
      </item>
      
      <item>
        <title>MSA 설계시 고려해야될 점과 Pattern</title>
        <link>https://Shin0102.github.io/posts/devops-msa-considerations/</link>
        <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Tue, 01 Jun 2021 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/devops-msa-considerations/</guid>
        <description>고려해야 될점 Service Discovery : Container가 Scailing 되어도 해당서비스를 찾을 수 있어야 함 서비스 레지스트리 (Eureka, Consul) 활용 DNS 기반 서비스 디스커버리 (AWS Route53) 쿠버네티스의 경우 Service,</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/msa.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/msa.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>MSA</category>
            
          
        
        
          
            
              <category>devops</category>
            
          
        
        
      </item>
      
      <item>
        <title>github action으로 Kubernetes 배포 자동화</title>
        <link>https://Shin0102.github.io/posts/devops-github-action/</link>
        <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Wed, 30 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/devops-github-action/</guid>
        <description>들어가며 작년부터 회사의 거대한 레거시 시스템을 Python 기반의 API 서버로 조금씩 포팅하고 있다. 한번에 모두 포팅하기란 불가능하기에 MSA를 기반으로 여러 기능들로 나</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/github-action.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/github-action.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>github action</category>
            
          
            
              <category>Kubernetes</category>
            
          
            
              <category>argocd</category>
            
          
        
        
          
            
              <category>devops</category>
            
          
        
        
      </item>
      
      <item>
        <title>AWS EKS Role에 대한 고찰</title>
        <link>https://Shin0102.github.io/posts/devops-aws-eks-role/</link>
        <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Sat, 19 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/devops-aws-eks-role/</guid>
        <description>MSA(microservice architecture)를 위해 CDK(typescript)를 통해 EKS를 구성한 적이 있는데, 이때는 동작에만 집중하다 보니, 자동으로 생성되는</description>
        
        <dc:creator>shin alli</dc:creator>
        <media:content url="https://Shin0102.github.ioimages/aws-eks.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://Shin0102.github.iostatic/images/aws-eks.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>aws eks</category>
            
          
            
              <category>cdk</category>
            
          
            
              <category>role</category>
            
          
            
              <category>iam</category>
            
          
        
        
          
            
              <category>devops</category>
            
          
        
        
      </item>
      
      <item>
        <title>zzo theme shortcodes</title>
        <link>https://Shin0102.github.io/posts/etc-zzo-theme-shotcodes/</link>
        <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
        <author>shinalli0102@gmail.com (shin alli)</author>
        <atom:modified>Sun, 06 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://Shin0102.github.io/posts/etc-zzo-theme-shotcodes/</guid>
        <description>hugo zzo 테마에서 사용 가능한 shortcodes 기본적으로 Markdown 문법도 제공하지만, 아래 shortcode들도 사용가능해서 블로그 쓰는데 유용할 것 같다. 이외에도 flowcha</description>
        
        <dc:creator>shin alli</dc:creator>
        
        
        <media:content url="https://Shin0102.github.iostatic/images/whoami/avatar.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>zzo theme</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
